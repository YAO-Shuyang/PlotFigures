from mylib.statistic_test import *

code_id = '0106 - Peak Rate - Maintained PC vs Others'
p = os.path.join(figpath, 'Cell Aligned', code_id)
mkdir(p)

if os.path.exists(os.path.join(figdata,code_id+'data.pkl')) == False:
    Data = DataFrameEstablish(variable_names = ['Peak Rate', 'Cell Type'], f = f1, function = ExclusivePeakRate_Interface, file_name = code_id+'', behavior_paradigm = 'CrossMaze')
else:
    with open(os.path.join(figdata,code_id+'data.pkl'), 'rb') as handle:
        Data = pickle.load(handle)

x = MultipleLocator(1)
fs = 12

idx = np.where((Data['Cell Type'] == 'Newly Recuited PC')|(Data['Cell Type'] == 'Original PC'))[0]
NRPCData = DivideData(Data, index = idx)
# Peak Rate of Other Cells (Newly Recruited Cell)
fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = NRPCData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Environment', loc = 'upper center', ncol = 3, fontsize = 8, title_fontsize = 8)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (Newly Recruited PC)', fontsize = fs)
ax.axis([-0.5,8.5,0,8])
ax.set_yticks([0,2,4,6,8])
ax.axhline(6, ls = ':', color = "orange")
ax.axhline(4, ls = ':', color = "limegreen")
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (Newly Recruited PC) [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (Newly Recruited PC) [lineplot].png'), dpi = 600)
plt.close()

# Mice 11095 Only
idx = np.where(NRPCData['MiceID'] == '11095')[0]
SubData = DivideData(NRPCData, idx)
fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = SubData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Maze Type', loc = 'upper center', fontsize = 8, title_fontsize = 9, ncol = 3)
ax.xaxis.set_major_locator(x)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (Newly Recruited PC) #11095', fontsize = fs)
ax.axhline(8, ls = ':', color = "orange")
ax.axhline(5, ls = ':', color = "limegreen")
ax.set_yticks(np.linspace(0,12,7))
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
ax.axis([-0.5,10.5,0,12])
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (Newly Recruited PC) - 11095 [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (Newly Recruited PC) - 11095 [lineplot].png'), dpi = 600)
plt.close()

# Mice 11092 Only
idx = np.where(NRPCData['MiceID'] == '11092')[0]
SubData = DivideData(NRPCData, idx)
fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = SubData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Maze Type', loc = 'upper center', fontsize = 8, title_fontsize = 9, ncol = 3)
ax.xaxis.set_major_locator(x)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (Newly Recruited PC) #11092', fontsize = fs)
ax.axhline(6, ls = ':', color = "orange")
ax.axhline(4, ls = ':', color = "limegreen")
ax.set_yticks(np.linspace(0,8,5))
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
ax.axis([-0.5,10.5,0,8])
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (Newly Recruited PC) - 11092 [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (Newly Recruited PC) - 11092 [lineplot].png'), dpi = 600)
plt.close()


# Maintained PC Only! =========================================================================================
idx = np.where((Data['Cell Type'] == 'Maintained PC')|(Data['Cell Type'] == 'Original PC'))[0]
MPCData = DivideData(Data, idx)

plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = MPCData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Environment', loc = 'upper center', ncol = 3, fontsize = 8, title_fontsize = 8)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (Only mPC)', fontsize = fs)
ax.axis([-0.5,8.5,0,8])
ax.set_yticks([0,2,4,6,8])
ax.axhline(6, ls = ':', color = "orange")
ax.axhline(4, ls = ':', color = "limegreen")
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (Only mPC) [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (Only mPC) [lineplot].png'), dpi = 600)
plt.close()

# Mice 11095 Only
idx = np.where(MPCData['MiceID'] == '11095')[0]
SubData = DivideData(MPCData, idx)

fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = SubData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Maze Type', loc = 'upper center', fontsize = 8, title_fontsize = 9, ncol = 3)
ax.xaxis.set_major_locator(x)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (Only mPC) #11095', fontsize = fs)
ax.axhline(8, ls = ':', color = "orange")
ax.axhline(5, ls = ':', color = "limegreen")
ax.set_yticks(np.linspace(0,12,7))
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
ax.axis([-0.5,10.5,0,12])
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (Only mPC) - 11095 [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (Only mPC) - 11095 [lineplot].png'), dpi = 600)
plt.close()

# Mice 11092 Only
idx = np.where(MPCData['MiceID'] == '11092')[0]
SubData = DivideData(MPCData, idx)

fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = SubData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Maze Type', loc = 'upper center', fontsize = 8, title_fontsize = 9, ncol = 3)
ax.xaxis.set_major_locator(x)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (Only mPC) #11092', fontsize = fs)
ax.axhline(6, ls = ':', color = "orange")
ax.axhline(4, ls = ':', color = "limegreen")
ax.set_yticks(np.linspace(0,8,5))
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
ax.axis([-0.5,10.5,0,8])
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (Only mPC) - 11092 [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (Only mPC) - 11092 [lineplot].png'), dpi = 600)
plt.close()


# ======================================== PLOT ALL Cell ===================================================================================================
plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = Data, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Environment', loc = 'upper center', ncol = 3, fontsize = 8, title_fontsize = 8)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (All Cell)', fontsize = fs)
ax.axis([-0.5,8.5,0,8])
ax.set_yticks([0,2,4,6,8])
ax.axhline(6, ls = ':', color = "orange")
ax.axhline(4, ls = ':', color = "limegreen")
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (All Cell) [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (All Cell) [lineplot].png'), dpi = 600)
plt.close()

# Mice 11095 Only
idx = np.where(Data['MiceID'] == '11095')[0]
SubData = DivideData(Data, idx)
fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = SubData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Maze Type', loc = 'upper center', fontsize = 8, title_fontsize = 9, ncol = 3)
ax.xaxis.set_major_locator(x)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (All Cell) #11095', fontsize = fs)
ax.axhline(8, ls = ':', color = "orange")
ax.axhline(5, ls = ':', color = "limegreen")
ax.set_yticks(np.linspace(0,12,7))
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
ax.axis([-0.5,10.5,0,12])
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (All Cell) - 11095 [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (All Cell) - 11095 [lineplot].png'), dpi = 600)
plt.close()

# Mice 11092 Only
idx = np.where(Data['MiceID'] == '11092')[0]
SubData = DivideData(Data, idx)
fig = plt.figure(figsize = (4,3))
ax = Clear_Axes(plt.axes(), close_spines = ['top','right'], ifxticks=True, ifyticks=True)
sns.lineplot(x = 'Training Day',y = 'Peak Rate', data = SubData, hue = 'Maze Type', ax = ax, err_style = 'bars', err_kws = {'elinewidth':1, 'capsize':3, 'capthick':1})
ax.legend(edgecolor = 'white', facecolor = 'white', title = 'Maze Type', loc = 'upper center', fontsize = 8, title_fontsize = 9, ncol = 3)
ax.xaxis.set_major_locator(x)
ax.set_xlabel('Training Day', fontsize = fs)
ax.set_ylabel('Peak Rate / Hz', fontsize = fs)
ax.set_title('Peak Rate (All Cell) #11092', fontsize = fs)
ax.axhline(6, ls = ':', color = "orange")
ax.axhline(4, ls = ':', color = "limegreen")
ax.set_yticks(np.linspace(0,8,5))
plt.xticks(ticks = [0,1,2,3,4,5,6,7,8,9,10], labels = ['P1','P2', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6','D7', 'D8', 'D9'])
ax.xaxis.set_major_locator(x)
ax.axis([-0.5,10.5,0,8])
plt.tight_layout()
plt.savefig(os.path.join(p,'Peak Rate (All Cell) - 11092 [lineplot].svg'), dpi = 600)
plt.savefig(os.path.join(p,'Peak Rate (All Cell) - 11092 [lineplot].png'), dpi = 600)
plt.close()